<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-file="http://www.springframework.org/schema/integration/file"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-2.1.xsd
		http://www.springframework.org/schema/integration/file http://www.springframework.org/schema/integration/file/spring-integration-file-2.1.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	  <context:property-placeholder location="classpath:jdbc.properties" />

	
	 
	 <bean id="nasdaqQuoteRequest" class="com.bhn.stock.http.NasdaqQuoteDataRequest">
	 	<constructor-arg value="${stockapp.nasdaqurl}" />
	 </bean>

	<bean id="driverConfiguration" class="com.bhn.stockapp.webdriver.DriverConfiguration"
		p:financeUrl="${stockapp.financeurl}" p:defaultStockSymbol="${stockapp.defaultStockSymbol}" />


	<!--  bean id="screenReader" class="com.bhn.stockapp.tdameritrade.ScreenReader">
		<property name="screen" value="Between 2 and 5" />
		<property name="stockCaptureFile" value="between2and5.csv" />
	</bean -->
	
	<bean id="quoteExtractor" class="com.bhn.stockapp.yahoo.QuoteExtractor">
		<property name="outputDirectory" value="${output.directory}/" />
		<property name="filePrefix" value="stockquotes" />
		<property name="url" value="${stockapp.financeurl}" />
		<property name="fetchSize" value="100" />
	</bean>
	
	<bean id="stockSymbolGenerator" class="com.bhn.stockapp.ftp.StockSymbolListGenerator">
		<property name="hostName" value="ftp.nasdaqtrader.com" />
		<property name="remoteFileName" value="SymbolDirectory/nasdaqlisted.txt" />
		<property name="localFileName" value="${output.directory}/nasdaqlisted.txt" />
	</bean>
	<!-- 
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="acquireIncrement" value="${c3p0.acquireIncrement}" />
        <property name="minPoolSize" value="${c3p0.minPoolSize}" />
        <property name="maxPoolSize" value="${c3p0.maxPoolSize}" />
	</bean>
	 -->
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!--  Batch Framework Begin -->
	<!-- 
	<bean id="transactionManager" class="org.springframework.batch.support.transaction.ResourcelessTransactionManager" />
	<bean id="jobRepository" class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean" p:transactionManager-ref="transactionManager" />
	 -->
	<bean id="itemReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="resource" value="file:${output.directory}/nasdaqlisted.txt" />
		<property name="strict" value="false" />
		<property name="linesToSkip" value="1" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="fieldSetMapper">
					<bean class="com.bhn.stockapp.ftp.StockSymbolFieldSetMapper" />
				</property>
				<property name="lineTokenizer">
					<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="delimiter" value="|" />
					</bean>
				</property>
			</bean>
		</property> 
	</bean>
	
	
	<bean id="itemWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<property name="assertUpdates" value="false" />
		<property name="itemSqlParameterSourceProvider">
			<bean
				class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
		</property>
		<property name="sql">
			<value>
				<![CDATA[
					INSERT INTO `stocks`.`stock_symbols`
						(`symbol`,`security_name`,`market_category`,`test_issue`,`financial_status`,`round_lot_size`)
					VALUES 
						( :symbol, :securityName, :marketCategory, :testIssue, :financialStatus, :roundLotSize )
					ON DUPLICATE KEY UPDATE create_date = CURRENT_TIMESTAMP
				]]>
			</value>
		</property>
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="stockQuoteReader" class="org.springframework.batch.item.database.JdbcPagingItemReader" scope="step">
		<property name="dataSource" ref="dataSource" />
		<property name="queryProvider">
			<bean id="queryProviderFactoryBean"	class="org.springframework.batch.item.database.support.SqlPagingQueryProviderFactoryBean">
				<property name="sortKey" value="symbol" />
				<property name="selectClause">
					<value>
						<![CDATA[
							SELECT `symbol`,`security_name`,`market_category`,`test_issue`,`financial_status`,`stock_symbols`.`round_lot_size`, `create_date`
						]]>
					</value>
				</property>
				<property name="fromClause">
					<value>
						<![CDATA[
							FROM `stocks`.`stock_symbols`
						]]>
					</value>
				</property>
				<property name="dataSource" ref="dataSource" />
			</bean>
		</property>
		<property name="pageSize" value="100" />
		<property name="rowMapper">
			<bean class="com.bhn.stockapp.ftp.StockSymbolRowMapper" />
		</property>
	</bean>
	
	<bean id="quoteFlatFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="strict" value="false" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="fieldSetMapper">
					<bean class="com.bhn.stockapp.yahoo.QuoteFieldSetMapper" scope="step" />
				</property>
				<property name="lineTokenizer">
					<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer" />
				</property>
			</bean>
		</property> 
	</bean>
	
	<bean id="multiQuoteReader" class="org.springframework.batch.item.file.MultiResourceItemReader" scope="step">
		<property name="resources" value="file://${app.dir}/output/*.csv" />
		<property name="delegate" ref="quoteFlatFileItemReader" />
	</bean>
	
	<bean id="quoteWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<property name="assertUpdates" value="false" />
		<property name="itemSqlParameterSourceProvider">
			<bean
				class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
		</property>
		<property name="sql">
			<value>
				<![CDATA[
					INSERT INTO `stocks`.`stock_quotes`(`uid`, `symbol`,`security_name`,`current_price`,
									`fetch_date`,`fetch_time`,`day_open`,`day_high`,`day_low`,
									`dividend`,`pe_ratio`,`change_percentage`,`52_week_high`,`52_week_low`, `volume`, `exchange`)
					VALUES (:uid, :symbol,:securityName,:currentPrice,:fetchDate,:fetchTime,:dayOpen,
								:dayHigh,:dayLow,:dividend,:peRatio,:changePercentage, :fiftyWeekHigh, :fiftyWeekLow, :volume, :exchange)
					ON DUPLICATE KEY UPDATE current_price = :currentPrice, fetch_date = :fetchDate, 
						fetch_time = :fetchTime, day_open = :dayOpen, day_high = :dayHigh, day_low = :dayLow, 
						dividend = :dividend, pe_ratio = :peRatio, change_percentage = :changePercentage, 
						52_week_high = :fiftyWeekHigh, 52_week_low = :fiftyWeekLow, volume = :volume, exchange = :exchange
				]]>
			</value>
		</property>
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="stockQuoteWriter" class="com.bhn.stockapp.yahoo.QuoteItemBatchWriter">
		<property name="quoteExtractor" ref="quoteExtractor" />
	</bean>
	
	<bean id="fileDeletingTask" class="com.bhn.stockapp.yahoo.FileDeletingTasklet" scope="step">
		<property name="extension" value="csv" />
		<property name="directoryResource">
			<bean id="directory" class="org.springframework.core.io.FileSystemResource">
				<constructor-arg value="${output.directory}" />
			</bean>
		</property>
	</bean>
	
	
	<bean id="quoteRequestTask" class="com.bhn.stock.http.NasdaqQuoteRequestTasklet">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
		<property name="request" ref="nasdaqQuoteRequest" />
		<property name="outputFile" value="${quote.directory}/quotes-#{T(System).currentTimeMillis()}.csv" />
	</bean>
 
   <bean id="stockIdIncrementer" class="org.springframework.batch.core.launch.support.RunIdIncrementer" />
   <bean id="quotesIncrementer" class="org.springframework.batch.core.launch.support.RunIdIncrementer" />
	
	<bean id="appBrowser" class="org.openqa.selenium.firefox.FirefoxDriver" destroy-method="quit" >
	</bean>
	
	<bean id="otcQuoteExtractor" class="com.bhn.stockapp.otc.OTCQuoteExtractor">
		<constructor-arg value="http://www.otcmarkets.com/research/stock-screener" />
		<property name="driver" ref="appBrowser" />
		<property name="maxPrice" value="1" />
		<property name="minPrice" value="0" />
		<property name="minPercentChange" value="5" />
		<property name="tiers">
			<array>
				<value>OTC Pink Limited</value>
				<value>OTC Pink Current</value>
			</array>
		</property>
		<property name="securityType">
			<array>
				<value>Common Stock</value>
			</array>
		</property>
		<property name="locale">
			<array>
				<value>USA</value>
			</array>
		</property>
	</bean>
	
   <bean id="otcQuoteExtractorTask" class="com.bhn.stockapp.otc.OTCQuoteTasklet">
   		<property name="jdbcTemplate" ref="jdbcTemplate" />
   		<property name="extractor" ref="otcQuoteExtractor" />
   </bean>	
	
	<batch:job id="quoteSync" incrementer="stockIdIncrementer">
		<batch:step id="stockSymbolSync">
			<batch:tasklet>
				<batch:chunk reader="itemReader" writer="itemWriter" commit-interval="200" />
			</batch:tasklet>
		</batch:step>
	</batch:job> 
		
	<batch:job id="nasdaqTodb" incrementer="stockIdIncrementer">
		<batch:step id="stockQuoteSync">
			<batch:tasklet>
				<batch:chunk reader="stockQuoteReader" writer="stockQuoteWriter" commit-interval="200" />
			</batch:tasklet>
		</batch:step>
	</batch:job>
	<batch:job id="importQuotes" incrementer="quotesIncrementer">
		<batch:step id="quoteDbSync">
			<batch:tasklet>
				<batch:chunk reader="multiQuoteReader" writer="quoteWriter" commit-interval="500" />
			</batch:tasklet>
			<batch:next on="COMPLETED" to="deleteCsvFiles"/>
			<batch:end on="FAILED" />
		</batch:step>
		<batch:step id="deleteCsvFiles">
			<batch:tasklet ref="fileDeletingTask" />
			<batch:next on="*" to="requestQuote" />
		</batch:step>
		<batch:step id="requestQuote">
			<batch:tasklet ref="quoteRequestTask" />
			<batch:next on="*" to="otcQuoteSync" />
		</batch:step>
		<batch:step id="otcQuoteSync">
			<batch:tasklet ref="otcQuoteExtractorTask" />
		</batch:step>
	</batch:job>
				
 </beans>

